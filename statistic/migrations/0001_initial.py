# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2015-12-22 06:59
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Activedevicelog',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('imei', models.CharField(db_column='Imei', max_length=50)),
                ('umengdeviceinfo', models.CharField(blank=True, db_column='UmengDeviceInfo', max_length=120, null=True)),
                ('umengchannel', models.CharField(blank=True, db_column='UmengChannel', max_length=20, null=True)),
                ('time', models.DateTimeField(blank=True, db_column='Time', null=True)),
            ],
            options={
                'db_table': 'ActiveDeviceLog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Autodomainconfig',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('time', models.DateTimeField(blank=True, db_column='Time', null=True)),
            ],
            options={
                'db_table': 'AutoDomainConfig',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Changehistoryoffilter',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('time', models.DateTimeField(db_column='Time')),
                ('filename', models.CharField(db_column='FileName', max_length=500)),
                ('guid', models.CharField(db_column='GUID', max_length=500)),
            ],
            options={
                'db_table': 'ChangeHistoryOfFilter',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Configinfo',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('type', models.IntegerField(db_column='Type')),
                ('address', models.CharField(db_column='Address', max_length=50)),
                ('port', models.IntegerField(db_column='Port')),
                ('security', models.IntegerField(db_column='Security')),
                ('domain', models.CharField(blank=True, db_column='Domain', max_length=50, null=True)),
                ('displayname', models.CharField(blank=True, db_column='DisplayName', max_length=50, null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=100, null=True)),
                ('enablemesg', models.TextField(blank=True, db_column='EnableMesg', null=True)),
                ('enableurl', models.TextField(blank=True, db_column='EnableUrl', null=True)),
            ],
            options={
                'db_table': 'ConfigInfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Deviceemaillog',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('imei', models.CharField(db_column='Imei', max_length=50)),
                ('email', models.CharField(db_column='Email', max_length=50)),
                ('protocol', models.CharField(blank=True, db_column='Protocol', max_length=20, null=True)),
                ('model', models.CharField(blank=True, db_column='Model', max_length=50, null=True)),
                ('osversion', models.IntegerField(blank=True, db_column='OsVersion', null=True)),
                ('appversion', models.CharField(blank=True, db_column='AppVersion', max_length=50, null=True)),
            ],
            options={
                'db_table': 'DeviceEmailLog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Domaincert',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('domain', models.CharField(db_column='Domain', max_length=50)),
                ('cert', models.TextField(blank=True, db_column='Cert', null=True)),
                ('time', models.DateTimeField(blank=True, db_column='Time', null=True)),
                ('host', models.CharField(blank=True, db_column='Host', max_length=50, null=True)),
                ('port', models.IntegerField(blank=True, db_column='Port', null=True)),
            ],
            options={
                'db_table': 'DomainCert',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Domainconfig',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('domain', models.CharField(db_column='Domain', max_length=50)),
                ('type', models.IntegerField(db_column='Type')),
            ],
            options={
                'db_table': 'DomainConfig',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Domainwelcome',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('domain', models.CharField(db_column='Domain', max_length=50)),
                ('easwelcome', models.CharField(blank=True, db_column='EASWelcome', max_length=100, null=True)),
                ('imapwelcome', models.CharField(blank=True, db_column='IMAPWelcome', max_length=100, null=True)),
                ('popwelcome', models.CharField(blank=True, db_column='POPWelcome', max_length=100, null=True)),
            ],
            options={
                'db_table': 'DomainWelcome',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Domainwhitelist',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('domain', models.CharField(db_column='Domain', max_length=50)),
                ('host', models.CharField(db_column='Host', max_length=100)),
                ('port', models.IntegerField(db_column='Port')),
            ],
            options={
                'db_table': 'DomainWhiteList',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Emaillog',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('email', models.CharField(db_column='Email', max_length=50)),
                ('time', models.DateTimeField(blank=True, db_column='Time', null=True)),
            ],
            options={
                'db_table': 'EmailLog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Filterconfig',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('filename', models.CharField(db_column='FileName', max_length=50)),
                ('enable', models.IntegerField(db_column='Enable')),
                ('version', models.IntegerField(db_column='Version')),
                ('appversion', models.IntegerField(blank=True, db_column='AppVersion', null=True)),
                ('jsonguid', models.CharField(blank=True, db_column='JsonGuid', max_length=100, null=True)),
            ],
            options={
                'db_table': 'FilterConfig',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Filterfile',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('filename', models.CharField(db_column='FileName', max_length=50)),
                ('enable', models.IntegerField(db_column='Enable')),
                ('version', models.IntegerField(db_column='Version')),
                ('appversion', models.IntegerField(blank=True, db_column='AppVersion', null=True)),
                ('jsonguid', models.CharField(blank=True, db_column='JsonGuid', max_length=100, null=True)),
            ],
            options={
                'db_table': 'FilterFile',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Filteruserrequest',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('reporttime', models.DateTimeField(db_column='ReportTime')),
                ('email', models.CharField(db_column='Email', max_length=100)),
                ('isrelease', models.IntegerField(db_column='IsRelease')),
                ('status', models.IntegerField(db_column='Status')),
                ('file', models.CharField(db_column='File', max_length=100)),
                ('descript', models.CharField(blank=True, db_column='Descript', max_length=200, null=True)),
                ('imei', models.CharField(blank=True, db_column='Imei', max_length=50, null=True)),
                ('osversion', models.IntegerField(blank=True, db_column='OsVersion', null=True)),
                ('appversion', models.IntegerField(blank=True, db_column='AppVersion', null=True)),
                ('model', models.CharField(blank=True, db_column='Model', max_length=50, null=True)),
            ],
            options={
                'db_table': 'FilterUserRequest',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Junksender',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('senderemail', models.CharField(db_column='SenderEmail', max_length=90)),
                ('count', models.IntegerField(db_column='Count')),
            ],
            options={
                'db_table': 'JunkSender',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Latestemailconfig',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('imei', models.CharField(db_column='Imei', max_length=50)),
                ('email', models.CharField(db_column='Email', max_length=100)),
                ('reporttime', models.DateTimeField(blank=True, db_column='ReportTime', null=True)),
            ],
            options={
                'db_table': 'LatestEmailConfig',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Mx2Domain',
            fields=[
                ('mx', models.CharField(db_column='MX', max_length=100, primary_key=True, serialize=False)),
                ('domain', models.CharField(db_column='Domain', max_length=50)),
            ],
            options={
                'db_table': 'MX2Domain',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Proxyconfig',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('domain', models.CharField(db_column='Domain', max_length=50)),
                ('version', models.IntegerField(db_column='Version')),
                ('type', models.IntegerField()),
                ('address', models.CharField(db_column='Address', max_length=100)),
                ('originaddress', models.CharField(blank=True, db_column='OriginAddress', max_length=100, null=True)),
                ('port', models.IntegerField(db_column='Port')),
                ('originport', models.IntegerField(blank=True, db_column='OriginPort', null=True)),
                ('usessl', models.IntegerField(blank=True, db_column='UseSSL', null=True)),
                ('usetsl', models.IntegerField(blank=True, db_column='UseTSL', null=True)),
            ],
            options={
                'db_table': 'ProxyConfig',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Userapplog',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('imei', models.CharField(blank=True, db_column='Imei', max_length=100, null=True)),
                ('emaillist', models.TextField(blank=True, db_column='EmailList', null=True)),
                ('logpath', models.CharField(db_column='LogPath', max_length=200)),
                ('filename', models.CharField(blank=True, db_column='FileName', max_length=100, null=True)),
                ('uploadtime', models.DateTimeField(db_column='UploadTime')),
            ],
            options={
                'db_table': 'UserAppLog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Userconfiginfo',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('protocol', models.IntegerField(db_column='Protocol')),
                ('address', models.CharField(db_column='Address', max_length=50)),
                ('port', models.IntegerField(db_column='Port')),
                ('security', models.IntegerField(db_column='Security')),
            ],
            options={
                'db_table': 'UserConfigInfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Userconfiglog',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('email', models.CharField(db_column='Email', max_length=100)),
                ('domain', models.CharField(db_column='Domain', max_length=50)),
                ('isautoconfig', models.IntegerField(db_column='IsAutoConfig')),
                ('issuccess', models.IntegerField(db_column='IsSuccess')),
                ('isrelease', models.IntegerField(db_column='IsRelease')),
                ('errormessage', models.TextField(blank=True, db_column='ErrorMessage', null=True)),
                ('protocol', models.IntegerField(db_column='Protocol')),
                ('loginname', models.CharField(blank=True, db_column='LoginName', max_length=100, null=True)),
                ('reporttime', models.DateTimeField(db_column='ReportTime')),
                ('imei', models.CharField(blank=True, db_column='Imei', max_length=50, null=True)),
                ('osversion', models.IntegerField(blank=True, db_column='OsVersion', null=True)),
                ('firstsuccess', models.IntegerField(blank=True, db_column='FirstSuccess', null=True)),
                ('firstappversion', models.CharField(blank=True, db_column='FirstAppVersion', max_length=50, null=True)),
                ('firstappchannel', models.CharField(blank=True, db_column='FirstAppChannel', max_length=50, null=True)),
                ('appversion', models.CharField(blank=True, db_column='AppVersion', max_length=50, null=True)),
                ('model', models.CharField(blank=True, db_column='Model', max_length=50, null=True)),
                ('network', models.CharField(blank=True, db_column='Network', max_length=50, null=True)),
                ('task', models.CharField(blank=True, db_column='Task', max_length=36, null=True)),
            ],
            options={
                'db_table': 'UserConfigLog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Userconfigtask',
            fields=[
                ('id', models.CharField(db_column='Id', max_length=36, primary_key=True, serialize=False)),
                ('domain', models.CharField(db_column='Domain', max_length=50)),
                ('protocol', models.IntegerField(db_column='Protocol')),
                ('login', models.CharField(db_column='Login', max_length=50)),
                ('incomingaddress', models.CharField(db_column='IncomingAddress', max_length=50)),
                ('incomingport', models.IntegerField(db_column='IncomingPort')),
                ('incomingsecurity', models.IntegerField(db_column='IncomingSecurity')),
                ('outgoingaddress', models.CharField(db_column='OutgoingAddress', max_length=50)),
                ('outgoingport', models.IntegerField(db_column='OutgoingPort')),
                ('outgoingsecurity', models.IntegerField(db_column='OutgoingSecurity')),
                ('currentconfig', models.TextField(blank=True, db_column='CurrentConfig', null=True)),
                ('status', models.IntegerField(db_column='Status')),
                ('tasktime', models.DateTimeField(db_column='TaskTime')),
            ],
            options={
                'db_table': 'UserConfigTask',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Userhelplog',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('email', models.CharField(db_column='Email', max_length=50)),
                ('otheremail', models.CharField(blank=True, db_column='OtherEmail', max_length=200, null=True)),
                ('contactinfo', models.CharField(blank=True, db_column='ContactInfo', max_length=100, null=True)),
                ('helpproblem', models.CharField(blank=True, db_column='HelpProblem', max_length=200, null=True)),
                ('imei', models.CharField(blank=True, db_column='Imei', max_length=50, null=True)),
                ('osversion', models.IntegerField(blank=True, db_column='OsVersion', null=True)),
                ('appversion', models.CharField(blank=True, db_column='AppVersion', max_length=50, null=True)),
                ('model', models.CharField(blank=True, db_column='Model', max_length=50, null=True)),
                ('network', models.CharField(blank=True, db_column='Network', max_length=50, null=True)),
                ('reporttime', models.DateTimeField(db_column='ReportTime')),
                ('problemfrom', models.CharField(db_column='ProblemFrom', max_length=100)),
                ('problempath', models.TextField(blank=True, db_column='ProblemPath', null=True)),
                ('state', models.IntegerField(db_column='State')),
            ],
            options={
                'db_table': 'UserHelpLog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Userrequire',
            fields=[
                ('id', models.AutoField(db_column='Id', primary_key=True, serialize=False)),
                ('email', models.CharField(db_column='Email', max_length=50)),
                ('requirement', models.CharField(db_column='Requirement', max_length=50)),
                ('time', models.DateTimeField(blank=True, db_column='Time', null=True)),
            ],
            options={
                'db_table': 'UserRequire',
                'managed': False,
            },
        ),
    ]
